
#- name: Check if composer files are present
#  command: 'stat /usr/local/bin/composer'
#  register: magento_present
#  ignore_errors: yes

- name: Check if magento files are present
  command: "stat {{ magento_document_root }}/bin/magento"
  register: magento_present
  ignore_errors: yes

- name: Set repo.magento.com composer keys
  shell: '/usr/local/bin/composer config --global http-basic.repo.magento.com b2f5cba61c010a8eb9e563dc7f031db2 842ab5320d751c878cdc488f3e5ddf6a'
  environment:
    HOME: "/root"
  when: magento_present is failed

- name: download magento with composer
  shell: '/usr/local/bin/composer create-project --repository=https://repo.magento.com/ magento/project-community-edition {{ magento_document_root }}'
  environment:
    HOME: "/root"
  when: magento_present is failed

- name: Assign random password for Magento admin user
  set_fact:
    magento_admin_password: "{{ lookup('password', '~/magento_admin_password length=24')}}"

- name: Assign random path for Magento admin URL
  set_fact:
    magento_admin_url: "{{ lookup('password', '~/magento_admin_url chars=ascii_letters,digits length=24')}}"
    
- name: install Magento
  command: "{{ magento_install_cmd }}"
  args:
    chdir: '{{ magento_document_root }}'

- name: compile static Magento
  command: 'php -d set_time_limit=7200 -d memory_limit=2048M bin/magento setup:di:compile'
  args:
    chdir: '{{ magento_document_root }}'

- name: Install Magento cron job
  command: 'php -dmemory_limit=1G bin/magento cron:install'
  args:
    chdir: '{{ magento_document_root }}'
  ignore_errors: yes

- name: Ensure web directories have correct owner, group, and mode
  file:
    state: directory
    recurse: yes
    owner: "{{ magento_os_user }}"
    group: "{{ magento_os_group }}"
    path: "{{ magento_document_root }}"
    mode: 'u=rwX,g=rwX,o=rX'

- name: Configure Directory Level Permissions for media
  command: "{{ find_dirs_cmd }}"
  args:
    chdir: "{{ magento_document_root }}"
  register: file_perm_change
  changed_when: file_perm_change.stdout

- name: Ensure sftp user has access to Magento dirs
  acl:
    path: "{{ magento_document_root }}"
    entity: sftp
    etype: user
    permissions: rwx
    default: "{{ item }}"
    state: present
    recursive: yes
  with_items:
    - yes
    - no
